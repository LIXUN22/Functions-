# -*- coding: utf-8 -*-
"""funtions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13a3A2P-kFTF970SRtM3NVbtSSIQNLYlA
"""

#multipy two variables
def m(x,y):
  p=x*y
  return p

m(3,4)

# greet
def greet (n):
  print(f"hello,{n}!")
greet("navroop")

#global and local scope
x=5
def o():
  y=3
  def i():
    z=x+y
    return z
  return i()
o()

#add total
t=0
def add(n):
  global t
  t=t+n
  return t

add(10)

#largest of 2 and largest of 3
def largest(a,b):
  if a>b:
    return a
  else:
    return b
largest(10,20)
def largest_3(a,b,c):
  return largest(a,largest(b,c))
largest_3(10,20,30)

#wap python funation to find prime numbers in range 1 to 100
def prime():
  for i in range(1,101):
    if i>1:
      for j in range(2,i):
        if i%j==0:
          break
      else:
        print(i)
prime()

#wap python funtion to check given number is prime or not
def check(n):
  if n>1:
    for i in range(2,n):
      if n%i==0:
        print("not prime")
        break
    else:
      print("prime")
check(10)
check(2)

#stack functions push ,pop,is_empty,peek and size(stack)
def push(stack,item):
  stack.append(item)
  print("pushed item",item)

def is_empty(stack):
  return len(stack)==0

def pop(stack):
  if(is_empty(stack)):
    return ("stack is empty")
  return stack.pop()

def peek(stack):
  if(is_empty(stack)):
    return ("stack is empty")
  return stack[-1]

def size(stack):
  return len(stack)

stack=[]
push(stack,10)
push(stack,20)
push(stack,30)
print("popped item",pop(stack))
print("peek element",peek(stack))
print("the size of the stack is ",size(stack))
is_empty(stack)

"""bubble sort
example
 sorting array
 list=[5,2,9,1,5]
 lower to higher
 first pass:
 compare 5,2
 swap both
 list=[2,5,9,1,5]
 compare 5 ,9
 no swap
 compare 9,1
 swap
 l=[2,5,1,9,5]
 compare 9,5
 swap
 l=[2,5,1,5,9]
 9 is on correct place

 second pass:
 compare 2,5
 no swap
 compare 5,1
 swap
 l=[2,1,5,5,9]
 compare 5,5
 no swap
 compare 5,9
 no swap

 Third pass:
 compare 2,1
 swap
 l=[1,2,5,5,9]
 compare 2,5 and 5,5 and 5,9
 no swap

 result=[1,2,5,5,9] array is **sorted**

"""

#bubble sort technique

def bubble_sort(a):
  for i in range(len(a)):
    for j in range(len(a)-i-1):
      if a[j]>a[j+1]:
        a[j],a[j+1]=a[j+1],a[j]
  return a
a=[]
n=int(input("enter the number of elements"))
for i in range(n):
  b=int(input(f"enter element {i+1} : "))
  a.append(b)
print("sorted list",bubble_sort(a))

